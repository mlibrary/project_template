# This file is an example of how to configure a role-aware file.
#
# Role-aware files are not recommended because they muddy the normal
# configuration boundaries, and because they require special treatment
# to avoid errors when parsed by ERB.

development:
  local_namespace: umich
  local_api_root: http://127.0.0.1
  staging_dir: <%= Rails.root.join("repo", "staging").to_s %>
  repo_dir: <%= Rails.root.join("repo", "preservation").to_s %>
  queue_adapter: :resque

test:
  local_namespace: umich
  local_api_root: http://127.0.0.1
  staging_dir: <%= File.join "/tmp", "repo", "staging" %>
  repo_dir: <%= File.join "/tmp", "repo", "preservation" %>
  queue_adapter: :test

# Two things are going on here:
# The first is that we're not just calling dpn.to_h. This is because that
# will return an instance of the hash-like class Ettin::Options, and YAML
# helpfully coerces all objects other than primitives, arrays, and hashes
# to nil--silently.
#
# The second thing going on is we are using the lonely operator (&.) to
# avoid calling chained methods on nil. This isn't necessary in production,
# but it is necessary in other environments because the production config
# won't be available. However, ERB parses the entire file anyway, and it
# will try to resolve those references regardless of whether or not they're
# being thrown away.
#
production:
  local_namespace: <%= ProjectTemplate.config.dpn&.local_namespace %>
  local_api_root: <%= ProjectTemplate.config.dpn&.local_api_root %>
  staging_dir: <%= ProjectTemplate.config.dpn&.staging_dir %>
  repo_dir: <%= ProjectTemplate.config.dpn&.repo_dir %>
  queue_adapter: <%= ProjectTemplate.config.dpn&.queue_adapter %>

